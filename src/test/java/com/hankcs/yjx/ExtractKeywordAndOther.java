package com.hankcs.yjx;

import java.util.List;

import com.hankcs.hanlp.HanLP;
import com.hankcs.hanlp.mining.phrase.MutualInformationEntropyPhraseExtractor;
import com.hankcs.hanlp.summary.TextRankKeyword;
import com.hankcs.hanlp.summary.TextRankSentence;

public class ExtractKeywordAndOther {

	public static void main(String[] args) {
		
//		14. 关键词提取
//		String content = "程序员(英文Programmer)是从事程序开发、维护的专业人员。一般将程序员分为程序设计人员和程序编码人员，但两者的界限并不非常清楚，特别是在中国。软件从业人员分为初级程序员、高级程序员、系统分析员和项目经理四大类。";
		
		String content="数据在当今社会生活中起着越来越重要的作用，如何对数据进行有效的处理，使其产生价值得到越来越多人的关注。数据的相似性问题是数据处理中最常见的，而对数据进行近邻搜索是解决数据相似性问题最常用方法之一。随着大数据时代的来临，大规模的数据搜索对近邻算法提出更高的要求，如何更快更准确地对大规模数据进行近邻搜索再次成为业界的研究热点。\\n\"+ \r\n" + 
				"近邻搜索算法中，基于哈希的近邻搜索算法由于其较高的准确性和较快的搜索速度，在大规模的数据检索中得到越来越广泛的应用。但目前无论是基于学习的还是基于随机投影的哈希近邻算法都是为静态数据集设计的，当遇到动态的数据，或者数据量比较大，无法一次性放入内存时，这些算法就无法使用。而在线学习算法可以对不断增加的数据进行快速地检索和处理，从而避免对所有的数据重新进行一次耗时的操作，可以极大地减少时间和内存的消耗。\\n\"+\r\n" + 
				"针对上述问题，本文结合在线k均值聚类算法和密度敏感哈希算法，提出一种新的在线哈希算法，在线密度敏感哈希算法ODSH (Online Density Sensitive Hash)。首先给出固定聚类个数的在线k均值聚类公式；然后，根据在线k均值聚类量化后数据簇的表示点来划定超平面，并根据动态超平面推出该哈希算法的哈希函数以及对应的投影向量；最后根据投影向量划分的数据集求得各投影向量的信息熵值，根据其大小选出最合适的投影向量，并通过投影向量对数据集进行映射来获取对应的哈希编码。实验结果表明，与局部敏感哈希、谱哈希等哈希算法相比，本文算法在准确性和效率上均具有一定的优势，并且可以有效地应对动态的数据处理问题。";
		
				
		List<String> keywordList = HanLP.extractKeyword(content, 5);
		System.out.println(keywordList);
		
		List<String> keywordList1 = TextRankKeyword.getKeywordList(content, 10);
		System.out.println(keywordList1);

//		15. 自动摘要
		
//		String content1="数据在当今社会生活中起着越来越重要的作用，如何对数据进行有效的处理，使其产生价值得到越来越多人的关注。数据的相似性问题是数据处理中最常见的，而对数据进行近邻搜索是解决数据相似性问题最常用方法之一。随着大数据时代的来临，大规模的数据搜索对近邻算法提出更高的要求，如何更快更准确地对大规模数据进行近邻搜索再次成为业界的研究热点。\r\n" + 
//				"近邻搜索算法中，基于哈希的近邻搜索算法由于其较高的准确性和较快的搜索速度，在大规模的数据检索中得到越来越广泛的应用。但目前无论是基于学习的还是基于随机投影的哈希近邻算法都是为静态数据集设计的，当遇到动态的数据，或者数据量比较大，无法一次性放入内存时，这些算法就无法使用。而在线学习算法可以对不断增加的数据进行快速地检索和处理，从而避免对所有的数据重新进行一次耗时的操作，可以极大地减少时间和内存的消耗。\r\n" + 
//				"针对上述问题，本文结合在线k均值聚类算法和密度敏感哈希算法，提出一种新的在线哈希算法，在线密度敏感哈希算法ODSH (Online Density Sensitive Hash)。首先给出固定聚类个数的在线k均值聚类公式；然后，根据在线k均值聚类量化后数据簇的表示点来划定超平面，并根据动态超平面推出该哈希算法的哈希函数以及对应的投影向量；最后根据投影向量划分的数据集求得各投影向量的信息熵值，根据其大小选出最合适的投影向量，并通过投影向量对数据集进行映射来获取对应的哈希编码。实验结果表明，与局部敏感哈希、谱哈希等哈希算法相比，本文算法在准确性和效率上均具有一定的优势，并且可以有效地应对动态的数据处理问题。";

		String content1="数据在当今社会生活中起着越来越重要的作用，如何对数据进行有效的处理，使其产生价值得到越来越多人的关注。数据的相似性问题是数据处理中最常见的，而对数据进行近邻搜索是解决数据相似性问题最常用方法之一。随着大数据时代的来临，大规模的数据搜索对近邻算法提出更高的要求，如何更快更准确地对大规模数据进行近邻搜索再次成为业界的研究热点。\\n\"+ \r\n" + 
				"近邻搜索算法中，基于哈希的近邻搜索算法由于其较高的准确性和较快的搜索速度，在大规模的数据检索中得到越来越广泛的应用。但目前无论是基于学习的还是基于随机投影的哈希近邻算法都是为静态数据集设计的，当遇到动态的数据，或者数据量比较大，无法一次性放入内存时，这些算法就无法使用。而在线学习算法可以对不断增加的数据进行快速地检索和处理，从而避免对所有的数据重新进行一次耗时的操作，可以极大地减少时间和内存的消耗。\\n\"+\r\n" + 
				"针对上述问题，本文结合在线k均值聚类算法和密度敏感哈希算法，提出一种新的在线哈希算法，在线密度敏感哈希算法ODSH (Online Density Sensitive Hash)。首先给出固定聚类个数的在线k均值聚类公式；然后，根据在线k均值聚类量化后数据簇的表示点来划定超平面，并根据动态超平面推出该哈希算法的哈希函数以及对应的投影向量；最后根据投影向量划分的数据集求得各投影向量的信息熵值，根据其大小选出最合适的投影向量，并通过投影向量对数据集进行映射来获取对应的哈希编码。实验结果表明，与局部敏感哈希、谱哈希等哈希算法相比，本文算法在准确性和效率上均具有一定的优势，并且可以有效地应对动态的数据处理问题。";
		
//		String content1 = "算法可大致分为基本算法、数据结构的算法、数论算法、计算几何的算法、图的算法、动态规划以及数值分析、加密算法、排序算法、检索算法、随机化算法、并行算法、厄米变形模型、随机森林算法。\\n\" +\r\n" + 
//				"        \"算法可以宽泛的分为三类，\\n\" +\r\n" + 
//				"        \"一，有限的确定性算法，这类算法在有限的一段时间内终止。他们可能要花很长时间来执行指定的任务，但仍将在一定的时间内终止。这类算法得出的结果常取决于输入值。\\n\" +\r\n" + 
//				"        \"二，有限的非确定算法，这类算法在有限的时间内终止。然而，对于一个（或一些）给定的数值，算法的结果并不是唯一的或确定的。\\n\" +\r\n" + 
//				"        \"三，无限的算法，是那些由于没有定义终止定义条件，或定义的条件无法由输入的数据满足而不终止运行的算法。通常，无限算法的产生是由于未能确定的定义终止条件。";
		List<String> setenceList = HanLP.extractSummary(content1, 3);
		List<String> setenceList1 = TextRankSentence.getTopSentenceList(content1, 5);
		System.out.println(setenceList);
		System.out.println(setenceList1);
		
//		16. 短语提取
		String text = "算法工程师\n" +
                "算法（Algorithm）是一系列解决问题的清晰指令，也就是说，能够对一定规范的输入，在有限时间内获得所要求的输出。如果一个算法有缺陷，或不适合于某个问题，执行这个算法将不会解决这个问题。不同的算法可能用不同的时间、空间或效率来完成同样的任务。一个算法的优劣可以用空间复杂度与时间复杂度来衡量。算法工程师就是利用算法处理事物的人。\n" +
                "\n" +
                "1职位简介\n" +
                "算法工程师是一个非常高端的职位；\n" +
                "专业要求：计算机、电子、通信、数学等相关专业；\n" +
                "学历要求：本科及其以上的学历，大多数是硕士学历及其以上；\n" +
                "语言要求：英语要求是熟练，基本上能阅读国外专业书刊；\n" +
                "必须掌握计算机相关知识，熟练使用仿真工具MATLAB等，必须会一门编程语言。\n" +
                "\n" +
                "2研究方向\n" +
                "视频算法工程师、图像处理算法工程师、音频算法工程师 通信基带算法工程师\n" +
                "\n" +
                "3目前国内外状况\n" +
                "目前国内从事算法研究的工程师不少，但是高级算法工程师却很少，是一个非常紧缺的专业工程师。算法工程师根据研究领域来分主要有音频/视频算法处理、图像技术方面的二维信息算法处理和通信物理层、雷达信号处理、生物医学信号处理等领域的一维信息算法处理。\n" +
                "在计算机音视频和图形图像技术等二维信息算法处理方面目前比较先进的视频处理算法：机器视觉成为此类算法研究的核心；另外还有2D转3D算法(2D-to-3D conversion)，去隔行算法(de-interlacing)，运动估计运动补偿算法(Motion estimation/Motion Compensation)，去噪算法(Noise Reduction)，缩放算法(scaling)，锐化处理算法(Sharpness)，超分辨率算法(Super Resolution),手势识别(gesture recognition),人脸识别(face recognition)。\n" +
                "在通信物理层等一维信息领域目前常用的算法：无线领域的RRM、RTT，传送领域的调制解调、信道均衡、信号检测、网络优化、信号分解等。\n" +
                "另外数据挖掘、互联网搜索算法也成为当今的热门方向。\n" +
                "算法工程师逐渐往人工智能方向发展。";
		List<String> phraseList = HanLP.extractPhrase(text, 10);
		System.out.println(phraseList);
		List<String> phraseList1 = MutualInformationEntropyPhraseExtractor.extract(text, 5);
		System.out.println(phraseList1);
	}

}
